{"mappings":"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","sources":["ika.dom.ts","ika.ts"],"sourcesContent":["import Ika from './ika'\nimport { IkaFakerOptions } from './ika'\n\ndeclare global {\n    interface Window {\n        ikaFakerOptions: IkaFakerOptions;\n        faker: any\n    }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var ikaParentNode = document.getElementById(\"ika-apa\");\n    const ikaInstance = new Ika({});\n\n    function __ikahandleSubmit(evt: Event) {\n        var inputMapping = ikaInstance.generateMappingFromInputs();\n        var rawText = ikaTxt.value ;\n        if (rawText.length < 1) {\n            for (var [nameOrTag, fakerSpecOrFn] of Object.entries(window.ikaFakerOptions)) {\n                let el = document.getElementsByName(nameOrTag)[0];\n                if (!el) {\n                    console.error(\"failed to generate faker value - could not find element with name\", nameOrTag)\n                    return;\n                }\n                let value = fakerSpecOrFn;\n                if (typeof(value) === 'function') {\n                    el.setAttribute(\"value\", value(el) || '');\n                } else {\n                    let withoutFaker = typeof(value) === 'string' ? value.replace(\"faker.\", \"\") : '',\n                        fakedValue = window.faker.helpers.fake(`{{${withoutFaker}}}`);\n                    el.setAttribute(\"value\", fakedValue);\n                }\n            }\n            return false;\n        }\n\n        var parsed = ikaInstance.parseMapping(rawText, inputMapping);\n\n        if (parsed == null) {\n            return false;\n        }\n        for (var [el, value] of parsed) {\n            var elType = el.getAttribute(\"type\");\n            if (elType == \"radio\" || elType == \"checkbox\") {\n                if (value && (value == \"0\" || value.toLowerCase() == \"n\")) {\n                    el.removeAttribute(\"checked\");\n                }\n                if (value && (value == \"1\" || value.toLowerCase() == \"y\")) {\n                    el.setAttribute(\"checked\", \"checked\");\n                }\n            } else {\n                if (value.startsWith(\"faker.\")) {\n                    let withoutFaker = value.replace(\"faker.\", \"\"),\n                        fakedValue = window.faker.helpers.fake(`{{${withoutFaker}}}`);\n                    el.setAttribute(\"value\", fakedValue);\n                } else if (value) {\n                    el.setAttribute(\"value\", value);\n                }\n            }\n        }\n\n        return evt.preventDefault();\n    }\n\n    // If the ika input is not defined, then add it to the document\n    if (!ikaParentNode) {\n        ikaParentNode = document.createElement('div');\n        ikaParentNode.setAttribute('id', 'ika-apa');\n        ikaParentNode.setAttribute('data-generated', 'true');\n        ikaParentNode.style.position = 'absolute';\n        ikaParentNode.style.bottom = '0';\n        ikaParentNode.style.right = '0';\n\n        document.getElementsByTagName('body')[0].appendChild(ikaParentNode)\n\n        function onResize(event) {\n            ikaParentNode.style.bottom = '0';\n            ikaParentNode.style.right = '0';\n        }\n\n        window.addEventListener('resize', onResize)\n    }\n\n    if (ikaParentNode) {\n        var wrap = document.createElement(\"div\");\n        wrap.setAttribute(\"id\", \"nndi--ika-control\");\n\n        var ikaTxt = document.createElement(\"textarea\")\n        ikaTxt.setAttribute(\"id\", \"nndi--ika-txt\");\n        ikaTxt.setAttribute(\"placeholder\", \"use tags here or leave empty for auto-fill\")\n        ikaTxt.setAttribute(\"contenteditable\", \"true\");\n        ikaTxt.setAttribute(\"tabindex\", \"1\");\n\n        var ikaBtn = document.createElement(\"button\")\n        ikaBtn.setAttribute(\"id\", \"nndi--ika-btn\");\n        // ikaBtn.innerHTML = \"ðŸª„ Populate (Ctrl + Enter)\";\n        ikaBtn.innerHTML = \"ðŸª„ Fill (Ctrl + Enter)\";\n\n        var poweredBy = document.createElement(\"small\");\n        poweredBy.setAttribute(\"id\", \"nndi--ika-powered\");\n        poweredBy.innerHTML = 'Powered by <a href=\"https://github.com/zikani03/ika\">ika</a>';\n\n        ikaBtn.addEventListener(\"click\", __ikahandleSubmit);\n\n        ikaTxt.addEventListener(\"keypress\", (event: KeyboardEvent) => {\n            if (event.keyCode == 13 && event.ctrlKey) {\n                __ikahandleSubmit(event);\n            }\n        });\n\n        wrap.appendChild(ikaTxt);\n        wrap.appendChild(ikaBtn);\n        wrap.appendChild(poweredBy);\n\n        ikaParentNode.appendChild(wrap);\n    } else {\n        console.error(\"ika: failed to find or create node to mount ika onto. Typically expects a div#ika-apa\");\n    }\n});","/**\n * Ika provides functionality for mapping tags to Input Elements and parsing\n * tagged text input.\n * \n * @author Zikani Nyirenda Mwase <zikani03@nndi.cloud>\n */\n\nexport type IkaFakerOptions = {\n    [key: string]: String | ((x: any) => string)\n};\n\n\nexport default class Ika {\n\n    _config: any | null\n    __tagRegexp: RegExp\n    _inputTagMap: any\n\n    constructor(config = {}) {\n        this._config = Object.assign({}, config);\n        this.__tagRegexp = /(\\w+\\b\\:)/g;\n        this._inputTagMap = new Map<any, any>()\n    }\n\n    /**\n     * Generates mapping of tag to an input element.\n     * \n     * @return WeakMap with mapping of tag to input element \n     */\n    generateMappingFromInputs(): any {\n        const inputList: any = document.getElementsByTagName(\"input\");\n        let tagName: string | null = null;\n\n        for (var e of inputList) {\n            let inputField: HTMLInputElement = e\n\n            if (inputField.hasAttribute(\"data-ika\")) {\n                tagName = inputField.getAttribute(\"data-ika\");\n            } else {\n                // TODO: for checkboxes, radios and select options use the value as the tagName if possible.\n                tagName = inputField.getAttribute(\"name\");\n            }\n\n            if (this._inputTagMap[tagName!]) {\n                // already exists, skip it?\n                continue;\n            }\n            this._inputTagMap[tagName!] = inputField\n        }\n\n        return this._inputTagMap;\n    }\n\n    /**\n     * Parses tagged text with the given input mapping\n     * \n     * @param string textInput tagged text input\n     * @param object mapping of tag to input element\n     * @return object with mapping of input to value from the tagged text\n     */\n    parseMapping(textInput: string, mapping: Map<string, HTMLInputElement> | null = null) {\n        if (textInput == null || textInput === '') {\n            return null;\n        }\n\n        if (mapping == null) {\n            // Use Cached input map if the mapping is not provided\n            mapping = this._inputTagMap;\n        }\n\n        let output = new Map()\n\n        const atoms = textInput.split(this.__tagRegexp);\n        var currentTag: string | null = null;\n        var lastElementWasTag = false;\n        let el = null;\n\n        for (var value of atoms) {\n            if (this.__tagRegexp.test(value)) {\n                currentTag = value.trim().replace(\":\", \"\");\n                lastElementWasTag = true;\n                continue;\n            }\n            el = mapping[currentTag!];\n            if (lastElementWasTag && el) {\n                var formattedValue = value.trim()\n                    .replace(/^\\'/gm, \"\")\n                    .replace(/\\'$/gm, \"\")\n                    .replace(/^\\\"/gm, \"\")\n                    .replace(/\\\"$/gm, \"\")\n                    .trim();\n                output.set(el, formattedValue.trim());\n                lastElementWasTag = false;\n            }\n        }\n\n        if (output.size == 0)\n            return null;\n\n        return output;\n    }\n}\n"],"names":[],"version":3,"file":"ika.js.map"}