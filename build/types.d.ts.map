{"mappings":"AAmBA,QAAQ,MAAM,CAAC;IACX,UAAU,MAAM;QACZ,SAAS,EAAE,SAAS,CAAC;KACxB;CACJ","sources":["src/src/types.ts","src/src/ika.ts","src/src/ika.dom.ts","src/ika.dom.ts"],"sourcesContent":[null,null,null,"import './types'\nimport Ika from './ika'\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    var ikaParentNode = document.getElementById(\"ika-apa\");\n    const ikaInstance = new Ika({});\n\n\n    function setDataOnInputsOnTarget(event: Event, targetElement: HTMLFormElement|Document, taggedInputText: string, fakerObj: any) {\n        var inputMapping = ikaInstance.generateMappingFromInputs(targetElement);\n        var parsed = ikaInstance.parseMapping(taggedInputText, inputMapping);\n\n        if (parsed == null) {\n            return false;\n        }\n        for (var [el, value] of parsed) {\n            var elType = el.getAttribute(\"type\");\n            if (elType == \"radio\" || elType == \"checkbox\") {\n                if (value && (value == \"0\" || value.toLowerCase() == \"n\")) {\n                    el.removeAttribute(\"checked\");\n                }\n                if (value && (value == \"1\" || value.toLowerCase() == \"y\")) {\n                    el.setAttribute(\"checked\", \"checked\");\n                }\n            } else {\n                if (value.startsWith(\"faker.\")) {\n                    let withoutFaker = value.replace(\"faker.\", \"\"),\n                        fakedValue = fakerObj.helpers.fake(`{{${withoutFaker}}}`);\n                    el.setAttribute(\"value\", fakedValue);\n                } else if (value) {\n                    el.setAttribute(\"value\", value);\n                }\n            }\n        }\n\n        return event.preventDefault();\n    }\n\n    function __ikahandleSubmit(evt: Event) {\n        const configuredFaker = window.ikaConfig.faker;\n        var rawText = ikaTxt.value ;\n        if (rawText.length < 1) {\n            for (var [formName, ikaFormOptions] of Object.entries(window.ikaConfig)) {\n                for (var [nameOrTag, fakerSpecOrFn] of Object.entries(ikaFormOptions)) {\n                    let el = document.getElementsByName(nameOrTag)[0];\n                    if (!el) {\n                        console.error(\"failed to generate faker value - could not find element with name\", nameOrTag)\n                        return;\n                    }\n                    let value = fakerSpecOrFn;\n                    if (typeof(value) === 'function') {\n                        el.setAttribute(\"value\", value(el) || '');\n                    } else {\n                        let withoutFaker = typeof(value) === 'string' ? value.replace(\"faker.\", \"\") : '',\n                            fakedValue = configuredFaker.helpers.fake(`{{${withoutFaker}}}`);\n                        el.setAttribute(\"value\", fakedValue);\n                    }\n                }\n                return false;\n            }\n        }\n\n        // By default the document element is our default target\n        let ikaTargetElement: HTMLElement|Document = document;\n        \n        // try to find \n        if (document.getElementsByName(''))\n\n        return setDataOnInputsOnTarget(evt, ikaTargetElement, rawText, configuredFaker);\n    }\n\n    // If the ika input is not defined, then add it to the document\n    if (!ikaParentNode) {\n        ikaParentNode = document.createElement('div');\n        ikaParentNode.setAttribute('id', 'ika-apa');\n        ikaParentNode.setAttribute('data-generated', 'true');\n        ikaParentNode.style.position = 'absolute';\n        ikaParentNode.style.bottom = '0';\n        ikaParentNode.style.right = '0';\n\n        document.getElementsByTagName('body')[0].appendChild(ikaParentNode)\n\n        function onResize(event) {\n            ikaParentNode.style.bottom = '0';\n            ikaParentNode.style.right = '0';\n        }\n\n        window.addEventListener('resize', onResize)\n    }\n\n    if (ikaParentNode) {\n        var wrap = document.createElement(\"div\");\n        wrap.setAttribute(\"id\", \"nndi--ika-control\");\n\n        var ikaTxt = document.createElement(\"textarea\")\n        ikaTxt.setAttribute(\"id\", \"nndi--ika-txt\");\n        ikaTxt.setAttribute(\"placeholder\", \"use tags here or leave empty for auto-fill\")\n        ikaTxt.setAttribute(\"contenteditable\", \"true\");\n        ikaTxt.setAttribute(\"tabindex\", \"1\");\n\n        var ikaBtn = document.createElement(\"button\")\n        ikaBtn.setAttribute(\"id\", \"nndi--ika-btn\");\n        // ikaBtn.innerHTML = \"ðŸª„ Populate (Ctrl + Enter)\";\n        ikaBtn.innerHTML = \"ðŸª„ Fill (Ctrl + Enter)\";\n\n        var poweredBy = document.createElement(\"small\");\n        poweredBy.setAttribute(\"id\", \"nndi--ika-powered\");\n        poweredBy.innerHTML = 'Powered by <a href=\"https://github.com/zikani03/ika\">ika</a>';\n\n        ikaBtn.addEventListener(\"click\", __ikahandleSubmit);\n\n        ikaTxt.addEventListener(\"keypress\", (event: KeyboardEvent) => {\n            if (event.keyCode == 13 && event.ctrlKey) {\n                __ikahandleSubmit(event);\n            }\n        });\n\n        wrap.appendChild(ikaTxt);\n        wrap.appendChild(ikaBtn);\n        wrap.appendChild(poweredBy);\n\n        ikaParentNode.appendChild(wrap);\n    } else {\n        console.error(\"ika: failed to find or create node to mount ika onto. Typically expects a div#ika-apa\");\n    }\n});"],"names":[],"version":3,"file":"types.d.ts.map"}